Quando me aposentar, quero abrir uma academia em Milho Verde. A academia terá 4 salas para exercícios (spinning,
musculação, fit dance e pilates) Também teremos uma lanchonete e uma pequena loja de material de academia. Preciso
de um sistema para gerenciar as diárias, mensalidades, de forma geral para monitorar despesas e ganhos. Quando um
cliente potencial telefonar para fazer a reserva, eu verificarei a agenda e, se existir vaga, entrarei com os dados
do cliente (Nome, endereço, número do telefone, e-mail e CPF pseudo-anonimizado). Em seguida, farei um agendamento
preliminar, entrando com a escolha da aula e a(s) data(s) escolhida(s), o preço que será cobrado, número do cartão
de crédito, o tipo de aula e o instrutor que irá acompanhar as atividades. Um agendamento preliminar se torna definitivo
se o cliente confirmar, até 5 dias úteis antes de acessar a academia. Como recebemos muitos turistas, pretendo ter um
grande enfoque em diárias, mas iremos trabalhar com mensalidades também. Na confirmação do cliente será debitada a
diária ou mensalidade no cartão de crédito do cliente. Se o cliente não confirmar, o agendamento será cancelado. Se,
após a confirmação, o cliente desistir, até três dias antes da data marcada, será devolvida metade do valor cobrado.
É fundamental que eu saiba quantas pessoas estão na academia e quem entrou e saiu, em quais horários e dias, para isso
vou usar um sistema de catraca externo, mas preciso que o sistema da academia contabilize todas as ações dos meus
clientes. Este mesmo sistema deve possibilitar o lançamento das despesas da academia (limpeza, instrutores e
funcionários, material de uso diário, etc…), emitir a "conta" de cada cliente, e o gerenciamento das despesas da
academia. Também, deve possibilitar, ao final de cada mês, fazer um balanço das receitas e despesas do mês. Além
de mim, os funcionários da academia terão acesso a todas as funcionalidades, exceto ao gerenciamento das despesas
da academia e ao balanço mensal de receitas e despesas. Para acesso, é necessário autenticação do usuário.

Questão 2
    1. Implementar todas as classes com base no diagrama de classes criado. Atente-se para todas as relações entre as
    classes e a forma correta de implementar seus métodos e atributos;
    2. O sistema será utilizado pelos colaboradores e pelo administrador
    3. Sobrescrever o método toString() de todas as classes implementadas;
    4. Utilizar a palavra-chave super para implementar os construtores das subclasses.
    5. O sistema deverá armazenar de forma estática as informações das 4 salas da academia.
    6. Deve ser possível cadastrar os colaboradores no sistema, alterar ou editar seus atributos;
    7. Cadastrar, alterar ou excluir clientes;
    8. Verificar e imprimir dados das vendas de diárias e mensalidades e dados dos clientes;
    9. As reservas, ações da catraca e os clientes devem ser salvos de forma dinâmica no sistema.
    10. Cada venda efetuada vai gerar um extrato que deverá ser impresso e salvo junto com a informação do cliente
    que fez o agendamento.
    11. Criar duas variáveis de classe (static) que irão armazenar quantas instâncias foram criadas dos tipos Cliente
    dentro da classe Sistema usando duas soluções diferentes:
        a. Uma delas utilizando o enfoque de encapsulamento de acordo com a engenharia de software (atributo private
        static e métodos get e set);
        b. Na segunda estratégia, implementar usando o controle de acesso do tipo protect;
        c. Explique quais são as vantagens e desvantagens de cada uma das duas estratégias.
    12. Criar um método de classe para classe Sistema que deverá retornar quantas instâncias foram criadas dos tipos
    Cliente e Produtos da loja;
    13. Implementar a interface Comparator para as classes Agendamento e Cliente e fazer comparações por diferentes atributos.
    14. Salve e recupere todas as informações dos Clientes, Agendamentos, Produtos, RelatóriosdeVendas, Colaboradores e
    Estoque em um arquivo de texto. Utilizem classes já prontas na internet que trabalhem com o formato json. Ao
    manipular um arquivo utilize os conceitos aprendidos em aula para alocar e desalocar recursos com segurança.
    15. Gerar um JavaDoc de todo o seu projeto.
